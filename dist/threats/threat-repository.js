"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThreatRepository = void 0;
const typeorm_1 = require("typeorm");
const threat_entity_1 = require("./entities/threat-entity");
const threat_status_enum_1 = require("./threat-status.enum");
let ThreatRepository = class ThreatRepository extends typeorm_1.Repository {
    async createThreat(obj) {
        let threat = new threat_entity_1.Threatent();
        threat = obj;
        threat.status = threat_status_enum_1.ThreatStatus.PENDING;
        await threat.save();
        return threat;
    }
    async getAllThreats(filterDto) {
        const { status, comment } = filterDto;
        const query = this.createQueryBuilder('report');
        if (status) {
            query.andWhere('report.status = :status', { status });
        }
        const reports = await query.getMany();
        return reports;
    }
};
ThreatRepository = __decorate([
    typeorm_1.EntityRepository(threat_entity_1.Threatent)
], ThreatRepository);
exports.ThreatRepository = ThreatRepository;
//# sourceMappingURL=threat-repository.js.map